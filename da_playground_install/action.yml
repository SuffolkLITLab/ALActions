name: 'Deploy to Docassemble Playground'
description: 'Pushes code to a specified Docassemble playground on merge to main'
inputs:
  SERVER_URL:
    description: 'URL of the server to push to'
    required: true
  PROJECT_NAME:
    description: 'Name of the project to push to'
    required: true
  DOCASSEMBLE_DEVELOPER_API_KEY:
    description: 'API key for the Docassemble playground'
    required: true
  USER_ID:
    description: 'User ID for the Docassemble user (optional)'
    required: false
  RESTART:
    description: 'Control server restart (0 to skip restart, optional)'
    required: false
runs:
  using: 'composite'
  steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Change Working Directory
      run: cd ..
      shell: bash
    - name: Get Repository Name
      id: repo_name
      run: echo "::set-output name=name::$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2)"
      shell: bash
    - name: Zip repository contents excluding .git
      run: zip -r deploy.zip "./${{ steps.repo_name.outputs.name }}" -x "*.git*"
      shell: bash
    - name: Push to Docassemble Playground
      run: |
        curl_args=("-X" "POST" "-H" "X-API-Key: ${{ inputs.DOCASSEMBLE_DEVELOPER_API_KEY }}")

        if [ -n "${{ inputs.USER_ID }}" ]; then
          curl_args+=("-F" "user_id=${{ inputs.USER_ID }}")
        fi

        if [ -n "${{ inputs.RESTART }}" ]; then
          curl_args+=("-F" "restart=${{ inputs.RESTART }}")
        fi

        curl_args+=("-F" "file=@deploy.zip" "-F" "project=${{ inputs.PROJECT_NAME }}" "${{ inputs.SERVER_URL }}/api/playground_install")

        curl "${curl_args[@]}"
      shell: bash
