name: 'ALActions: Publish and Announce'
description: 'Publishes packages ðŸ“¦ to PyPI and if successful, announces to teams'
author: 'Bryce Willey'
inputs:
  PYPI_API_TOKEN:
    description: 'The API token that you use to push packages to Pypy'
    required: true
  VERSION_TO_PUBLISH:
    description: 'The version of the package to publish. Should usually be "GITHUB_REF_NAME"'
    required: true
  TEAMS_BUMP_WEBHOOK:
    description: 'The webhook url that will make a teams message when POSTed to'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: "ALActions publish: Set environment variables"
      run: |
        echo "VERSION_TO_PUBLISH=${{ inputs.VERSION_TO_PUBLISH }}" >> $GITHUB_ENV
        echo "TEAMS_BUMP_WEBHOOK=${{ inputs.TEAMS_BUMP_WEBHOOK }}" >> $GITHUB_ENV
        echo "GITHUB_REF_NAME=${{ github.ref }}" >> $GITHUB_ENV
        echo "GITHUB_REPOSITORY=${{ github.repository }}" >> $GITHUB_ENV
        echo "GITHUB_SERVER=${{ github.server_url}}/${{ github.repository }}" >> $GITHUB_ENV
      shell: bash
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install pypa/build
      run: python -m pip install build --user
      shell: bash
    - name: Check syntax for all files
      run: python -m compileall . -q
      shell: bash
    - name: Build a binary wheel and a source tarball
      run: python -m build --sdist --wheel --outdir dist/
      shell: bash
    - if: ${{ success() && startsWith(github.ref, 'refs/tags') }}
      name: Ensure github tag is the same as the pypi tag
      run: |
        new_version=$(grep version= setup.py | cut -d\' -f 2)
        [ "$GITHUB_REF_NAME" = "v$new_version" ]
      shell: bash
    - if: ${{ failure() }}
      name: failed step
      run: |
        new_version=$(grep version= setup.py | cut -d\' -f 2)
        echo "Github tag name ($GITHUB_REF_NAME) doesn't match the setup.py version (v$new_version). Not publishing to pypi"
      shell: bash
    - name: Publish distribution ðŸ“¦ to PyPI
      if: ${{ success() && startsWith(github.ref, 'refs/tags') }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ inputs.PYPI_API_TOKEN }}
    - name: Announce to teams
      if: ${{ success() && startsWith(github.ref, 'refs/tags') && startsWith(inputs.TEAMS_BUMP_WEBHOOK, 'https:')}}
      run: |
        project_name=$(echo $GITHUB_REPOSITORY | cut -d '/' -f2 | cut -d '-' -f2)
        new_version=$(grep version= setup.py | cut -d\' -f 2)
        link_version=$(echo "$GITHUB_REF_NAME" | sed 's/\.//g')
        tag_url="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/tag/$GITHUB_REF_NAME"
        sed -e "s/{{version}}/$new_version/g; s/{{link_version}}/$link_version/g; s/{{project_name}}/$project_name/g; s|{{org_repo_name}}|$GITHUB_REPOSITORY|g; s|{{tag_url}}|$tag_url|g;" << EOF > teams_msg_to_send.json
        {
        	"@type": "MessageCard",
        	"@context": "https://schema.org/extensions",
        	"summary": "{{project_name}} Version released",
        	"themeColor": "0078D7",
        	"title": "{{project_name}} Version {{version}} released", 
        	"sections": [
        		{
        			"activityTitle": "Version {{version}}",
        			"activityImage": "https://avatars.githubusercontent.com/u/33028765?s=200", 
        			"facts": [
        				{
        					"name": "Repository:",
        					"value": "{{org_repo_name}}"
        				},
        				{
        					"name": "Tag",
        					"value": "v{{version}}"
        				}
        			],
        			"text": "" 
        		}
        	],
        	"potentialAction": [
                {
                    "@type": "OpenUri",
                    "name": "See Changelog",
                    "targets": [
                        {
                            "os": "default",
                            "uri": "https://github.com/{{org_repo_name}}/blob/main/CHANGELOG.md#version-{{link_version}}"
                        }
                    ]
                },
        		{
        			"@type": "OpenUri",
        			"name": "View in GitHub",
        			"targets": [
        				{
        					"os": "default",
        					"uri": "{{tag_url}}"
        				}
        			]
        		}
        	]
        }
        EOF
        curl -H "Content-Type:application/json" -d "@teams_msg_to_send.json" "$TEAMS_BUMP_WEBHOOK"
      shell: bash

